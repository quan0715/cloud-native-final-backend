name: Deploy Template

on:
  workflow_call:
    inputs:
      branch:
        description: "The branch being deployed"
        required: true
        type: string
      tag:
        description: "Docker image tag"
        required: true
        type: string
      image_name:
        description: "Full Docker image name (e.g., ghcr.io/owner/repo)"
        required: true
        type: string
    secrets:
      deploy_host:
        description: "Deployment host (EC2 IP or domain)"
        required: true
      ec2_user:
        description: "EC2 SSH username"
        required: true
      ec2_ssh_key:
        description: "EC2 SSH private key"
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ inputs.image_name }}:${{ inputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # - name: Sync configuration files to EC2
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.deploy_host }}
      #     username: ${{ secrets.ec2_user }}
      #     key: ${{ secrets.ec2_ssh_key }}
      #     source: "docker-compose.yml,observability/,nginx/"
      #     target: "~/app/"
      #     strip_components: 0

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.deploy_host }}
          username: ${{ secrets.ec2_user }}
          key: ${{ secrets.ec2_ssh_key }}
          script: |
            set -e
            echo "🔑 Logged in as $(whoami) on host $(hostname)"
            cd ~/app || { echo "❌ App directory ~/app not found"; exit 1; }

            # Navigate to your app directory (adjust path as needed)
            cd ~/app || { echo "❌ App directory not found"; exit 1; }
            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            # Verify configuration files are synced
            echo "📁 Verifying configuration files"
            echo "🔎 Verifying synced configuration files:"
            ls -la docker-compose.yml
            ls -la observability/
            ls -la nginx/nginx.conf
            sudo docker compose down
            echo "🚀 Bringing services up with Docker Compose (will pull new images as needed)"
            sudo docker compose up --pull always -d --remove-orphans

            echo "🧹 Pruning old Docker images to free up space"
            sudo docker image prune -af

            if sudo systemctl status cloudflared &> /dev/null; then
              echo "🔄 Restarting cloudflared service"
              sudo systemctl restart cloudflared
            else
              echo "ℹ️ cloudflared service not found or not active, skipping restart."
            fi

            echo "📊 Final deployment status:"
            sudo docker compose ps

            echo "✅ Deployment to EC2 completed successfully!"
